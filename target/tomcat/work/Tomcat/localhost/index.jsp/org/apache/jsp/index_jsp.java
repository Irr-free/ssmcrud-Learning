/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-04-07 01:13:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write(" \n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("    <title>员工列表</title>\n");
      out.write("    ");

        pageContext.setAttribute("APP_PATH", request.getContextPath());
    
      out.write("\n");
      out.write("    <!-- web路径：\n");
      out.write("    不以/开始的相对路径，找资源，以当前资源的路径为基准，经常容易出问题。\n");
      out.write("    以/开始的相对路径，找资源，以服务器的路径为标准(http://localhost:3306)；需要加上项目名\n");
      out.write("            http://localhost:3306/crud\n");
      out.write("     -->\n");
      out.write("    <script type=\"text/javascript\"\n");
      out.write("            src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/jquery-1.12.4.min.js\"></script>\n");
      out.write("    <link\n");
      out.write("            href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.3.7-dist/css/bootstrap.min.css\"\n");
      out.write("            rel=\"stylesheet\">\n");
      out.write("    <script\n");
      out.write("            src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<!-- 员工修改的模态框 -->\n");
      out.write("<div class=\"modal fade\" id=\"empUpdateModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("                <h4 class=\"modal-title\">员工修改</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <form class=\"form-horizontal\">\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">empName</label>\n");
      out.write("                        <div class=\"col-sm-10\">\n");
      out.write("                            <p class=\"form-control-static\" id=\"empName_update_static\"></p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">email</label>\n");
      out.write("                        <div class=\"col-sm-10\">\n");
      out.write("                            <input type=\"text\" name=\"email\" class=\"form-control\" id=\"email_update_input\" placeholder=\"email@atguigu.com\">\n");
      out.write("                            <span class=\"help-block\"></span>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">gender</label>\n");
      out.write("                        <div class=\"col-sm-10\">\n");
      out.write("                            <label class=\"radio-inline\">\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender1_update_input\" value=\"M\" checked=\"checked\"> 男\n");
      out.write("                            </label>\n");
      out.write("                            <label class=\"radio-inline\">\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender2_update_input\" value=\"F\"> 女\n");
      out.write("                            </label>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">deptName</label>\n");
      out.write("                        <div class=\"col-sm-4\">\n");
      out.write("                            <!-- 部门提交部门id即可 -->\n");
      out.write("                            <select class=\"form-control\" name=\"dId\">\n");
      out.write("                            </select>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"emp_update_btn\">更新</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 员工添加的模态框 -->\n");
      out.write("<div class=\"modal fade\" id=\"empAddModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("                <h4 class=\"modal-title\" id=\"myModalLabel\">员工添加</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <form class=\"form-horizontal\">\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">empName</label>\n");
      out.write("                        <div class=\"col-sm-10\">\n");
      out.write("                            <input type=\"text\" name=\"empName\" class=\"form-control\" id=\"empName_add_input\" placeholder=\"empName\">\n");
      out.write("                            <span class=\"help-block\"></span>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">email</label>\n");
      out.write("                        <div class=\"col-sm-10\">\n");
      out.write("                            <input type=\"text\" name=\"email\" class=\"form-control\" id=\"email_add_input\" placeholder=\"email@atguigu.com\">\n");
      out.write("                            <span class=\"help-block\"></span>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">gender</label>\n");
      out.write("                        <div class=\"col-sm-10\">\n");
      out.write("                            <label class=\"radio-inline\">\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender1_add_input\" value=\"M\" checked=\"checked\"> 男\n");
      out.write("                            </label>\n");
      out.write("                            <label class=\"radio-inline\">\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender2_add_input\" value=\"F\"> 女\n");
      out.write("                            </label>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label class=\"col-sm-2 control-label\">deptName</label>\n");
      out.write("                        <div class=\"col-sm-4\">\n");
      out.write("                            <!-- 部门提交部门id即可 -->\n");
      out.write("                            <select class=\"form-control\" name=\"dId\">\n");
      out.write("                            </select>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"emp_save_btn\">保存</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 搭建显示页面 -->\n");
      out.write("<div class=\"container\">\n");
      out.write("    <!-- 标题 -->\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-12\">\n");
      out.write("            <h1>SSM-CRUD BY PL</h1>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <!-- 按钮 -->\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-4 col-md-offset-8\">\n");
      out.write("            <button class=\"btn btn-primary\" id=\"emp_add_modal_btn\">新增</button>\n");
      out.write("            <button class=\"btn btn-danger\" id=\"emp_delete_all_btn\">删除</button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <!-- 显示表格数据 -->\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-12\">\n");
      out.write("            <table class=\"table table-hover\" id=\"emps_table\">\n");
      out.write("                <thead>\n");
      out.write("                <tr>\n");
      out.write("                    <th>\n");
      out.write("                        <input type=\"checkbox\" id=\"check_all\"/>\n");
      out.write("                    </th>\n");
      out.write("                    <th>#</th>\n");
      out.write("                    <th>empName</th>\n");
      out.write("                    <th>gender</th>\n");
      out.write("                    <th>email</th>\n");
      out.write("                    <th>deptName</th>\n");
      out.write("                    <th>操作</th>\n");
      out.write("                </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody>\n");
      out.write("\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- 显示分页信息 -->\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <!--分页文字信息  -->\n");
      out.write("        <div class=\"col-md-6\" id=\"page_info_area\"></div>\n");
      out.write("        <!-- 分页条信息 -->\n");
      out.write("        <div class=\"col-md-6\" id=\"page_nav_area\">\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    var totalRecord,currentPage;\n");
      out.write("    //1、页面加载完成以后，直接去发送ajax请求,要到分页数据\n");
      out.write("    $(function(){\n");
      out.write("        //去首页\n");
      out.write("        to_page(1);\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    function to_page(pn){\n");
      out.write("        $.ajax({\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emps\",\n");
      out.write("            data:\"pn=\"+pn,\n");
      out.write("            type:\"GET\",\n");
      out.write("            success:function(result){\n");
      out.write("                //console.log(result);\n");
      out.write("                //1、解析并显示员工数据\n");
      out.write("                build_emps_table(result);\n");
      out.write("                //2、解析并显示分页信息\n");
      out.write("                build_page_info(result);\n");
      out.write("                //3、解析显示分页条数据\n");
      out.write("                build_page_nav(result);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function build_emps_table(result){\n");
      out.write("        //清空table表格\n");
      out.write("        $(\"#emps_table tbody\").empty();\n");
      out.write("        var emps = result.extend.pageInfo.list;\n");
      out.write("        $.each(emps,function(index,item){\n");
      out.write("            var checkBoxTd = $(\"<td><input type='checkbox' class='check_item'/></td>\");\n");
      out.write("            var empIdTd = $(\"<td></td>\").append(item.empId);\n");
      out.write("            var empNameTd = $(\"<td></td>\").append(item.empName);\n");
      out.write("            var genderTd = $(\"<td></td>\").append(item.gender=='M'?\"男\":\"女\");\n");
      out.write("            var emailTd = $(\"<td></td>\").append(item.email);\n");
      out.write("            var deptNameTd = $(\"<td></td>\").append(item.department.deptName);\n");
      out.write("            /**\n");
      out.write("             <button class=\"\">\n");
      out.write("             <span class=\"\" aria-hidden=\"true\"></span>\n");
      out.write("             编辑\n");
      out.write("             </button>\n");
      out.write("             */\n");
      out.write("            var editBtn = $(\"<button></button>\").addClass(\"btn btn-primary btn-sm edit_btn\")\n");
      out.write("                .append($(\"<span></span>\").addClass(\"glyphicon glyphicon-pencil\")).append(\"编辑\");\n");
      out.write("            //为编辑按钮添加一个自定义的属性，来表示当前员工id\n");
      out.write("            editBtn.attr(\"edit-id\",item.empId);\n");
      out.write("            var delBtn =  $(\"<button></button>\").addClass(\"btn btn-danger btn-sm delete_btn\")\n");
      out.write("                .append($(\"<span></span>\").addClass(\"glyphicon glyphicon-trash\")).append(\"删除\");\n");
      out.write("            //为删除按钮添加一个自定义的属性来表示当前删除的员工id\n");
      out.write("            delBtn.attr(\"del-id\",item.empId);\n");
      out.write("            var btnTd = $(\"<td></td>\").append(editBtn).append(\" \").append(delBtn);\n");
      out.write("            //var delBtn =\n");
      out.write("            //append方法执行完成以后还是返回原来的元素\n");
      out.write("            $(\"<tr></tr>\").append(checkBoxTd)\n");
      out.write("                .append(empIdTd)\n");
      out.write("                .append(empNameTd)\n");
      out.write("                .append(genderTd)\n");
      out.write("                .append(emailTd)\n");
      out.write("                .append(deptNameTd)\n");
      out.write("                .append(btnTd)\n");
      out.write("                .appendTo(\"#emps_table tbody\");\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    //解析显示分页信息\n");
      out.write("    function build_page_info(result){\n");
      out.write("        $(\"#page_info_area\").empty();\n");
      out.write("        $(\"#page_info_area\").append(\"当前\"+result.extend.pageInfo.pageNum+\"页,总\"+\n");
      out.write("            result.extend.pageInfo.pages+\"页,总\"+\n");
      out.write("            result.extend.pageInfo.total+\"条记录\");\n");
      out.write("        totalRecord = result.extend.pageInfo.total;\n");
      out.write("        currentPage = result.extend.pageInfo.pageNum;\n");
      out.write("    }\n");
      out.write("    //解析显示分页条，点击分页要能去下一页....\n");
      out.write("    function build_page_nav(result){\n");
      out.write("        //page_nav_area\n");
      out.write("        $(\"#page_nav_area\").empty();\n");
      out.write("        var ul = $(\"<ul></ul>\").addClass(\"pagination\");\n");
      out.write("\n");
      out.write("        //构建元素\n");
      out.write("        var firstPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"首页\").attr(\"href\",\"#\"));\n");
      out.write("        var prePageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"&laquo;\"));\n");
      out.write("        if(result.extend.pageInfo.hasPreviousPage == false){\n");
      out.write("            firstPageLi.addClass(\"disabled\");\n");
      out.write("            prePageLi.addClass(\"disabled\");\n");
      out.write("        }else{\n");
      out.write("            //为元素添加点击翻页的事件\n");
      out.write("            firstPageLi.click(function(){\n");
      out.write("                to_page(1);\n");
      out.write("            });\n");
      out.write("            prePageLi.click(function(){\n");
      out.write("                to_page(result.extend.pageInfo.pageNum -1);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        var nextPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"&raquo;\"));\n");
      out.write("        var lastPageLi = $(\"<li></li>\").append($(\"<a></a>\").append(\"末页\").attr(\"href\",\"#\"));\n");
      out.write("        if(result.extend.pageInfo.hasNextPage == false){\n");
      out.write("            nextPageLi.addClass(\"disabled\");\n");
      out.write("            lastPageLi.addClass(\"disabled\");\n");
      out.write("        }else{\n");
      out.write("            nextPageLi.click(function(){\n");
      out.write("                to_page(result.extend.pageInfo.pageNum +1);\n");
      out.write("            });\n");
      out.write("            lastPageLi.click(function(){\n");
      out.write("                to_page(result.extend.pageInfo.pages);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        //添加首页和前一页 的提示\n");
      out.write("        ul.append(firstPageLi).append(prePageLi);\n");
      out.write("        //1,2，3遍历给ul中添加页码提示\n");
      out.write("        $.each(result.extend.pageInfo.navigatepageNums,function(index,item){\n");
      out.write("\n");
      out.write("            var numLi = $(\"<li></li>\").append($(\"<a></a>\").append(item));\n");
      out.write("            if(result.extend.pageInfo.pageNum == item){\n");
      out.write("                numLi.addClass(\"active\");\n");
      out.write("            }\n");
      out.write("            numLi.click(function(){\n");
      out.write("                to_page(item);\n");
      out.write("            });\n");
      out.write("            ul.append(numLi);\n");
      out.write("        });\n");
      out.write("        //添加下一页和末页 的提示\n");
      out.write("        ul.append(nextPageLi).append(lastPageLi);\n");
      out.write("\n");
      out.write("        //把ul加入到nav\n");
      out.write("        var navEle = $(\"<nav></nav>\").append(ul);\n");
      out.write("        navEle.appendTo(\"#page_nav_area\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //清空表单样式及内容\n");
      out.write("    function reset_form(ele){\n");
      out.write("        $(ele)[0].reset();\n");
      out.write("        //清空表单样式\n");
      out.write("        $(ele).find(\"*\").removeClass(\"has-error has-success\");\n");
      out.write("        $(ele).find(\".help-block\").text(\"\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //点击新增按钮弹出模态框。\n");
      out.write("    $(\"#emp_add_modal_btn\").click(function(){\n");
      out.write("        //清除表单数据（表单完整重置（表单的数据，表单的样式））\n");
      out.write("        reset_form(\"#empAddModal form\");\n");
      out.write("        //s$(\"\")[0].reset();\n");
      out.write("        //发送ajax请求，查出部门信息，显示在下拉列表中\n");
      out.write("        getDepts(\"#empAddModal select\");\n");
      out.write("        //弹出模态框\n");
      out.write("        $(\"#empAddModal\").modal({\n");
      out.write("            backdrop:\"static\"\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //查出所有的部门信息并显示在下拉列表中\n");
      out.write("    function getDepts(ele){\n");
      out.write("        //清空之前下拉列表的值\n");
      out.write("        $(ele).empty();\n");
      out.write("        $.ajax({\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/depts\",\n");
      out.write("            type:\"GET\",\n");
      out.write("            success:function(result){\n");
      out.write("                //{\"code\":100,\"msg\":\"处理成功！\",\n");
      out.write("                //\"extend\":{\"depts\":[{\"deptId\":1,\"deptName\":\"开发部\"},{\"deptId\":2,\"deptName\":\"测试部\"}]}}\n");
      out.write("                //console.log(result);\n");
      out.write("                //显示部门信息在下拉列表中\n");
      out.write("                //$(\"#empAddModal select\").append(\"\")\n");
      out.write("                $.each(result.extend.depts,function(){\n");
      out.write("                    var optionEle = $(\"<option></option>\").append(this.deptName).attr(\"value\",this.deptId);\n");
      out.write("                    optionEle.appendTo(ele);\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //校验表单数据\n");
      out.write("    function validate_add_form(){\n");
      out.write("        //1、拿到要校验的数据，使用正则表达式\n");
      out.write("        var empName = $(\"#empName_add_input\").val();\n");
      out.write("        var regName = /(^[a-zA-Z0-9_-]{6,16}$)|(^[\\u2E80-\\u9FFF]{2,5})/;\n");
      out.write("        if(!regName.test(empName)){\n");
      out.write("            //alert(\"用户名可以是2-5位中文或者6-16位英文和数字的组合\");\n");
      out.write("            show_validate_msg(\"#empName_add_input\", \"error\", \"用户名可以是2-5位中文或者6-16位英文和数字的组合\");\n");
      out.write("            return false;\n");
      out.write("        }else{\n");
      out.write("            show_validate_msg(\"#empName_add_input\", \"success\", \"\");\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        //2、校验邮箱信息\n");
      out.write("        var email = $(\"#email_add_input\").val();\n");
      out.write("        var regEmail = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/;\n");
      out.write("        if(!regEmail.test(email)){\n");
      out.write("            //alert(\"邮箱格式不正确\");\n");
      out.write("            //应该清空这个元素之前的样式\n");
      out.write("            show_validate_msg(\"#email_add_input\", \"error\", \"邮箱格式不正确\");\n");
      out.write("            /* $(\"#email_add_input\").parent().addClass(\"has-error\");\n");
      out.write("            $(\"#email_add_input\").next(\"span\").text(\"邮箱格式不正确\"); */\n");
      out.write("            return false;\n");
      out.write("        }else{\n");
      out.write("            show_validate_msg(\"#email_add_input\", \"success\", \"\");\n");
      out.write("        }\n");
      out.write("        return true;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //显示校验结果的提示信息\n");
      out.write("    function show_validate_msg(ele,status,msg){\n");
      out.write("        //清除当前元素的校验状态\n");
      out.write("        $(ele).parent().removeClass(\"has-success has-error\");\n");
      out.write("        $(ele).next(\"span\").text(\"\");\n");
      out.write("        if(\"success\"==status){\n");
      out.write("            $(ele).parent().addClass(\"has-success\");\n");
      out.write("            $(ele).next(\"span\").text(msg);\n");
      out.write("        }else if(\"error\" == status){\n");
      out.write("            $(ele).parent().addClass(\"has-error\");\n");
      out.write("            $(ele).next(\"span\").text(msg);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //校验用户名是否可用\n");
      out.write("    $(\"#empName_add_input\").change(function(){\n");
      out.write("        //发送ajax请求校验用户名是否可用\n");
      out.write("        var empName = this.value;\n");
      out.write("        $.ajax({\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/checkuser\",\n");
      out.write("            data:\"empName=\"+empName,\n");
      out.write("            type:\"POST\",\n");
      out.write("            success:function(result){\n");
      out.write("                if(result.code==100){\n");
      out.write("                    show_validate_msg(\"#empName_add_input\",\"success\",\"用户名可用\");\n");
      out.write("                    $(\"#emp_save_btn\").attr(\"ajax-va\",\"success\");\n");
      out.write("                }else{\n");
      out.write("                    show_validate_msg(\"#empName_add_input\",\"error\",result.extend.va_msg);\n");
      out.write("                    $(\"#emp_save_btn\").attr(\"ajax-va\",\"error\");\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //点击保存，保存员工。\n");
      out.write("    $(\"#emp_save_btn\").click(function(){\n");
      out.write("        //1、模态框中填写的表单数据提交给服务器进行保存\n");
      out.write("        //1、先对要提交给服务器的数据进行校验\n");
      out.write("        if(!validate_add_form()){\n");
      out.write("            return false;\n");
      out.write("        };\n");
      out.write("        //1、判断之前的ajax用户名校验是否成功。如果成功。\n");
      out.write("        if($(this).attr(\"ajax-va\")==\"error\"){\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        //2、发送ajax请求保存员工\n");
      out.write("        $.ajax({\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp\",\n");
      out.write("            type:\"POST\",\n");
      out.write("            data:$(\"#empAddModal form\").serialize(),\n");
      out.write("            success:function(result){\n");
      out.write("                //alert(result.msg);\n");
      out.write("                if(result.code == 100){\n");
      out.write("                    //员工保存成功；\n");
      out.write("                    //1、关闭模态框\n");
      out.write("                    $(\"#empAddModal\").modal('hide');\n");
      out.write("\n");
      out.write("                    //2、来到最后一页，显示刚才保存的数据\n");
      out.write("                    //发送ajax请求显示最后一页数据即可\n");
      out.write("                    to_page(totalRecord);\n");
      out.write("                }else{\n");
      out.write("                    //显示失败信息\n");
      out.write("                    //console.log(result);\n");
      out.write("                    //有哪个字段的错误信息就显示哪个字段的；\n");
      out.write("                    if(undefined != result.extend.errorFields.email){\n");
      out.write("                        //显示邮箱错误信息\n");
      out.write("                        show_validate_msg(\"#email_add_input\", \"error\", result.extend.errorFields.email);\n");
      out.write("                    }\n");
      out.write("                    if(undefined != result.extend.errorFields.empName){\n");
      out.write("                        //显示员工名字的错误信息\n");
      out.write("                        show_validate_msg(\"#empName_add_input\", \"error\", result.extend.errorFields.empName);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //1、我们是按钮创建之前就绑定了click，所以绑定不上。\n");
      out.write("    //1）、可以在创建按钮的时候绑定。    2）、绑定点击.live()\n");
      out.write("    //jquery新版没有live，使用on进行替代\n");
      out.write("    $(document).on(\"click\",\".edit_btn\",function(){\n");
      out.write("        //alert(\"edit\");\n");
      out.write("\n");
      out.write("\n");
      out.write("        //1、查出部门信息，并显示部门列表\n");
      out.write("        getDepts(\"#empUpdateModal select\");\n");
      out.write("        //2、查出员工信息，显示员工信息\n");
      out.write("        getEmp($(this).attr(\"edit-id\"));\n");
      out.write("\n");
      out.write("        //3、把员工的id传递给模态框的更新按钮\n");
      out.write("        $(\"#emp_update_btn\").attr(\"edit-id\",$(this).attr(\"edit-id\"));\n");
      out.write("        $(\"#empUpdateModal\").modal({\n");
      out.write("            backdrop:\"static\"\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    function getEmp(id){\n");
      out.write("        $.ajax({\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+id,\n");
      out.write("            type:\"GET\",\n");
      out.write("            success:function(result){\n");
      out.write("                //console.log(result);\n");
      out.write("                var empData = result.extend.emp;\n");
      out.write("                $(\"#empName_update_static\").text(empData.empName);\n");
      out.write("                $(\"#email_update_input\").val(empData.email);\n");
      out.write("                $(\"#empUpdateModal input[name=gender]\").val([empData.gender]);\n");
      out.write("                $(\"#empUpdateModal select\").val([empData.dId]);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //点击更新，更新员工信息\n");
      out.write("    $(\"#emp_update_btn\").click(function(){\n");
      out.write("        //验证邮箱是否合法\n");
      out.write("        //1、校验邮箱信息\n");
      out.write("        var email = $(\"#email_update_input\").val();\n");
      out.write("        var regEmail = /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/;\n");
      out.write("        if(!regEmail.test(email)){\n");
      out.write("            show_validate_msg(\"#email_update_input\", \"error\", \"邮箱格式不正确\");\n");
      out.write("            return false;\n");
      out.write("        }else{\n");
      out.write("            show_validate_msg(\"#email_update_input\", \"success\", \"\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        //2、发送ajax请求保存更新的员工数据\n");
      out.write("        $.ajax({\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+$(this).attr(\"edit-id\"),\n");
      out.write("            type:\"PUT\",\n");
      out.write("            data:$(\"#empUpdateModal form\").serialize(),\n");
      out.write("            success:function(result){\n");
      out.write("                //alert(result.msg);\n");
      out.write("                //1、关闭对话框\n");
      out.write("                $(\"#empUpdateModal\").modal(\"hide\");\n");
      out.write("                //回到当前页面\n");
      out.write("                to_page(currentPage);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //单个删除\n");
      out.write("    $(document).on(\"click\",\".delete_btn\",function(){\n");
      out.write("        //1、弹出是否确认删除对话框\n");
      out.write("        var empName = $(this).parents(\"tr\").find(\"td:eq(2)\").text();\n");
      out.write("        var empId = $(this).attr(\"del-id\");\n");
      out.write("        //alert($(this).parents(\"tr\").find(\"td:eq(1)\").text());\n");
      out.write("        if(confirm(\"确认删除【\"+empName+\"】吗？\")){\n");
      out.write("            //确认，发送ajax请求删除即可\n");
      out.write("            $.ajax({\n");
      out.write("                url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+empId,\n");
      out.write("                type:\"DELETE\",\n");
      out.write("                success:function(result){\n");
      out.write("                    alert(result.msg);\n");
      out.write("                    //回到本页\n");
      out.write("                    to_page(currentPage);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //完成全选/全不选功能\n");
      out.write("    $(\"#check_all\").click(function(){\n");
      out.write("        //attr获取checked是undefined;\n");
      out.write("        //我们这些dom原生的属性；attr获取自定义属性的值；\n");
      out.write("        //prop修改和读取dom原生属性的值\n");
      out.write("        $(\".check_item\").prop(\"checked\",$(this).prop(\"checked\"));\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //check_item\n");
      out.write("    $(document).on(\"click\",\".check_item\",function(){\n");
      out.write("        //判断当前选择中的元素是否5个\n");
      out.write("        var flag = $(\".check_item:checked\").length==$(\".check_item\").length;\n");
      out.write("        $(\"#check_all\").prop(\"checked\",flag);\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //点击全部删除，就批量删除\n");
      out.write("    $(\"#emp_delete_all_btn\").click(function(){\n");
      out.write("        //\n");
      out.write("        var empNames = \"\";\n");
      out.write("        var del_idstr = \"\";\n");
      out.write("        $.each($(\".check_item:checked\"),function(){\n");
      out.write("            //this\n");
      out.write("            empNames += $(this).parents(\"tr\").find(\"td:eq(2)\").text()+\",\";\n");
      out.write("            //组装员工id字符串\n");
      out.write("            del_idstr += $(this).parents(\"tr\").find(\"td:eq(1)\").text()+\"-\";\n");
      out.write("        });\n");
      out.write("        //去除empNames多余的,\n");
      out.write("        empNames = empNames.substring(0, empNames.length-1);\n");
      out.write("        //去除删除的id多余的-\n");
      out.write("        del_idstr = del_idstr.substring(0, del_idstr.length-1);\n");
      out.write("        if(confirm(\"确认删除【\"+empNames+\"】吗？\")){\n");
      out.write("            //发送ajax请求删除\n");
      out.write("            $.ajax({\n");
      out.write("                url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+del_idstr,\n");
      out.write("                type:\"DELETE\",\n");
      out.write("                success:function(result){\n");
      out.write("                    alert(result.msg);\n");
      out.write("                    //回到当前页面\n");
      out.write("                    to_page(currentPage);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
